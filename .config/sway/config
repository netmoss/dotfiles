### Startup
# Blue light
exec_always wlsunset -t 3500 -l -L

### Variables
# Logo key. Use Mod1 for Alt.
set $mod Mod4
set $left h
set $down j
set $up k
set $right l
# Preferred terminal emulator
set $term alacritty
# Preferred application launcher
set $rofi_cmd rofi \
    -terminal 
# Shows combined list of applications with desktop files and executables from PATH.
set $menu $rofi_cmd -show combi -combi-modes drun#run -modes combi

### Wallpaper
output * bg /home/netmoss/Pictures/Wallpapers/snow-capped-mountain.jpg fill

### Display configuration:
# Laptop
output eDP-1 resolution 1920x1200@60Hz position 0,0 adaptive_sync on
# Desktop
#output DP-1 resolution 3440x1440@144Hz position 0,0 adaptive_sync on
#
# Get outputs by via swaymsg -t get_outputs

### Input configuration
#
# Trackpoint configuration
input "type:pointer" {
    natural_scroll false
    scroll_button_lock "enabled"
    accel_profile "flat"
    pointer_accel 1
   }
# Trackpad configuration
input "type:touchpad" {
    dwt enabled
    tap enabled
    natural_scroll false
    middle_emulation enabled
     click_method clickfinger
    }
#
bindgesture swipe:right workspace prev
bindgesture swipe:left workspace next
#
# Keyboard configuration
input "type:keyboard" {
    xkb_layout us
    xkb_options caps:escape
    repeat_delay 200
    repeat_rate 40
   }
#
# Get inputs via swaymsg -t get_inputs

### Key binds
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+q kill

    # Start your launcher
    bindsym $mod+d exec $menu
	
    # Start browser
    bindsym $mod+w exec librewolf

    # Start file explorer
    bindsym $mod+n exec thunar

    # Lock screen
    bindsym $mod+Escape exec gtklock

    # Drag floating windows with $mod + left mouse button.
    # Resize them with right mouse button + $mod.
    # Also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right mouse button for dragging.
    floating_modifier $mod normal

    # Reload configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right

    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Use Shift to move the focused window
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right

    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10

    # Move focused window to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
#
# Layout stuff:
#
    # Use $mod + b or $mod + v to split current focus horizontally or vertically 
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch current container layout style
    bindsym $mod+s layout stacking
    bindsym $mod+t layout tabbed
    bindsym $mod+e layout toggle split

    # Fullscreen
    bindsym $mod+f fullscreen

    # Toggle focus between ttiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between tiling area and floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Move currently focused window to scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show scratchpad
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # Resize via direction keys
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

### Appearance
#
# Bar configuration:
  default_border pixel 2
  hide_edge_borders smart
  for_window [floating] border normal
  for_window [floating] title_format "%title"
  gaps inner 0
  gaps outer 0

# Window colours
  client.focused               #161b22     #161b22    #ecf2f8    #80808080      #80808080
  client.unfocused             #21262d     #161b22    #ecf2f8    #80808080      #21262d
  client.focused_inactive      #161b22     #161b22    #ecf2f8    #80808080      #80808080
# Fonts
  font pango:JetBrainsMono Nerd Font 10

# Apply mark for Xwayland and wayland native browser windows
for_window [class="Chromium-browser"] mark Browser
for_window [class="Brave-browser"] mark Browser
for_window [class="firefox"]  mark Browser
for_window [class="librewolf"]  mark Browser

for_window [app_id="Chromium-browser"] mark Browser
for_window [app_id="brave-browser"] mark Browser
for_window [app_id="firefox"] mark Browser
for_window [app_id="librewolf"] mark Browser

# Inhibit scrensaver for fullscreen browser windows
for_window [con_mark="Browser"] {
    inhibit_idle fullscreen
}

# Firefox wayland screensharing indicator
for_window [app_id="firefox" title="Firefox — Sharing Indicator"] {
    floating enable
}

# Librewolf wayland screensharing indicator
for_window [app_id="librewolf" title="Librewolf — Sharing Indicator"] {
    floating enable
}

# Display PulseAudio volume control application (both GTK and Qt varieties) as a floating window.

for_window [app_id="pavucontrol"] {
    floating enable
    move position center
}

for_window [app_id="pavucontrol-qt"] {
    floating enable
    move position center
}
for_window [app_id="lxqt-policykit-agent"] {
    floating enable
    move position center
}

# Key bindings for brightness control using `brightnessctl` and `libnotify`.
#
set $brightness_notification_cmd  command -v notify-send >/dev/null && \
        VALUE=$(brightnessctl --percentage get) && \
        notify-send -e -h string:x-canonical-private-synchronous:brightness \
            -h "int:value:$VALUE" -t 800 "Brightness: ${VALUE}%"

bindsym XF86MonBrightnessDown exec \
        'STEP="$brightness_step" && brightnessctl -q set ${STEP:-5}%- && $brightness_notification_cmd'
bindsym XF86MonBrightnessUp exec \
        'STEP="$brightness_step" && brightnessctl -q set +${STEP:-5}% && $brightness_notification_cmd'

# Key bindings for media player control via MPRIS D-Bus interface and `playerctl`.
#
# Allow play and stop bindings even if screen is locked
bindsym --locked {
    XF86AudioPlay       exec playerctl play-pause
    XF86AudioStop       exec playerctl stop
}

bindsym {
    XF86AudioForward    exec playerctl position +10
    XF86AudioNext       exec playerctl next
    XF86AudioPause      exec playerctl pause
    XF86AudioPrev       exec playerctl previous
    XF86AudioRewind     exec playerctl position -10
}
# Key bindings for taking screenshots via grimshot.
bindsym {
    # Capture the currently active output
    Print       exec grimshot save output $HOME/Pictures/Screenshots/$(date +%y-%m-%d_%H-%M-%S.png) && wl-copy < $(ls -t $HOME/Pictures/Screenshots/*.png | head -n 1)
    # Capture the currently active window
    Alt+Print   exec grimshot save active $HOME/Pictures/Screenshots/$(date +%y-%m-%d_%H-%M-%S.png) && wl-copy < $(ls -t $HOME/Pictures/Screenshots/*.png | head -n 1)
    # Select and capture a custom rectangular area
    Ctrl+Print  exec grimshot save area $HOME/Pictures/Screenshots/$(date +%y-%m-%d_%H-%M-%S.png) && wl-copy < $(ls -t $HOME/Pictures/Screenshots/*.png | head -n 1)
}
# Requires ~/Pictures/Screenshots/ directory for clipboard.

# Key bindings to control pipewire or pulseaudio volume with pactl.
# Displays a notification with the current state if /usr/bin/notify-send is available
# Requires:     pulseaudio-utils
# Recommends:   libnotify

set $volume_step 5
set $volume_limit 100

# Allow volume controls even if the screen is locked
bindsym --locked {
    XF86AudioRaiseVolume exec \
	pactl set-sink-volume @DEFAULT_SINK@ +5%
    XF86AudioLowerVolume exec \
        pactl set-sink-volume @DEFAULT_SINK@ -5%
    XF86AudioMute    exec pactl set-sink-mute @DEFAULT_SINK@ toggle
    XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
}
# A special mode for passing any keybindings to the focused application

mode "passthrough" {
    bindsym $mod+Pause mode default
}
bindsym $mod+Pause mode "passthrough"

## Status bar (waybar)
bar {
    swaybar_command waybar
}

# Idle and lock configuration via swayidle and gtklock
exec LT="$lock_timeout" ST="$screen_timeout" LT=${LT:-300} ST=${ST:-60} && \
    swayidle -w \
        timeout $LT 'gtklock -d' \
        timeout $((LT + ST)) 'swaymsg "output * power off"' \
                      resume 'swaymsg "output * power on"'  \
        timeout $ST 'pgrep -xu "$USER" gtklock >/dev/null && swaymsg "output * power off"' \
             resume 'pgrep -xu "$USER" gtklock >/dev/null && swaymsg "output * power on"'  \
        before-sleep 'gtklock -d' \
        lock 'gtklock -d' \
        unlock 'pkill -xu "$USER" -SIGUSR1 gtklock'

### Environmental variables and misc.
# Screensharing
exec systemctl --user import-environment WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
exec dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway

# Automounting volumes
# exec udiskie -ANt &
exec udiskie -an &
